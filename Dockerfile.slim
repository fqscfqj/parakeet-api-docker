# 超轻量版本：进一步优化镜像体积
FROM nvidia/cuda:12.2.2-runtime-ubuntu22.04

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# 创建非root用户并创建主目录
RUN groupadd -r appuser && useradd -r -m -g appuser appuser

# 安装系统依赖，使用最小化安装
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10-minimal \
    python3-pip \
    ffmpeg \
    gosu \
    curl \
    netcat-openbsd \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /var/cache/apt/* \
    && rm -rf /usr/share/doc/* \
    && rm -rf /usr/share/man/*

# 设置工作目录
WORKDIR /app

# 复制requirements.txt
COPY requirements.txt .

# 设置CUDA环境变量确保cuda-python能找到CUDA安装
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH

# 安装Python依赖，使用最小化安装
RUN pip install --no-cache-dir --no-compile \
    numpy \
    typing_extensions \
    Cython \
    && pip install --no-cache-dir --no-compile -r requirements.txt \
    && pip cache purge \
    && find /usr/local -name "*.pyc" -delete \
    && find /usr/local -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

# 复制应用代码和健康检查脚本
COPY --chown=appuser:appuser app.py .
COPY healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# 创建必要的目录
RUN mkdir -p /app/models /app/temp_uploads /tmp/numba_cache \
    && chown -R appuser:appuser /app \
    && chmod 777 /tmp/numba_cache

# 设置环境变量
ENV HF_HOME=/app/models \
    HF_HUB_DISABLE_SYMLINKS_WARNING=true \
    PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True \
    CUDA_LAUNCH_BLOCKING=1 \
    NUMBA_CACHE_DIR=/tmp/numba_cache \
    NUMBA_DISABLE_JIT=0 \
    CUDA_HOME=/usr/local/cuda

# 创建启动脚本
RUN echo '#!/bin/bash\n\
# 使用环境变量中的UID/GID调整用户权限\n\
PUID=${PUID:-1000}\n\
PGID=${PGID:-1000}\n\
\n\
echo "配置用户权限: UID=$PUID, GID=$PGID"\n\
\n\
# 首先确保所有必要的目录存在（以root权限创建）\n\
mkdir -p /home/appuser\n\
mkdir -p /home/appuser/.config/matplotlib\n\
mkdir -p /home/appuser/.lhotse/tools\n\
mkdir -p /app/temp_uploads\n\
mkdir -p /tmp/numba_cache\n\
mkdir -p /tmp/matplotlib_config\n\
\n\
# 设置tmp目录的权限（所有人可写）\n\
chmod 777 /tmp/numba_cache\n\
chmod 777 /tmp/matplotlib_config\n\
\n\
# 调整appuser的UID/GID\n\
if [ "$PUID" != "$(id -u appuser)" ]; then\n\
    echo "调整appuser UID从 $(id -u appuser) 到 $PUID"\n\
    usermod -u $PUID appuser 2>/dev/null || true\n\
fi\n\
if [ "$PGID" != "$(id -g appuser)" ]; then\n\
    echo "调整appuser GID从 $(id -g appuser) 到 $PGID"\n\
    groupmod -g $PGID appuser 2>/dev/null || true\n\
    usermod -g $PGID appuser 2>/dev/null || true\n\
fi\n\
\n\
# 设置用户目录权限\n\
chown -R appuser:$PGID /home/appuser\n\
chmod 755 /home/appuser\n\
chmod -R 755 /home/appuser/.config\n\
chmod -R 755 /home/appuser/.lhotse\n\
\n\
# 确保应用目录权限正确\n\
chown -R appuser:$PGID /app/temp_uploads\n\
\n\
# 如果models目录存在，尝试调整权限\n\
if [ -d "/app/models" ]; then\n\
    chown -R appuser:$PGID /app/models 2>/dev/null || true\n\
fi\n\
\n\
# 设置环境变量确保配置目录正确\n\
export MPLCONFIGDIR=/home/appuser/.config/matplotlib\n\
export HOME=/home/appuser\n\
\n\
# 切换到appuser并启动应用\n\
exec gosu appuser python3 app.py\n\
' > /usr/local/bin/start.sh && chmod +x /usr/local/bin/start.sh

# 暴露端口
EXPOSE 5092

# 健康检查 - 使用专门的健康检查脚本
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# 启动命令
CMD ["/usr/local/bin/start.sh"] 